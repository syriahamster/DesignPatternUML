# Ref https://www.petrockblock.com/2018/06/27/design-patterns-plantuml-abstract-factory-pattern/
# Ref https://ko.wikipedia.org/wiki/%EC%B6%94%EC%83%81_%ED%8C%A9%ED%86%A0%EB%A6%AC_%ED%8C%A8%ED%84%B4

@startuml
skinparam componentStyle uml2

title Abstract Factory Pattern

class Client
interface AbstractFactory <<interface>>
interface AbstractProductA <<interface>>
interface AbstractProductB <<interface>>
class ConcreteFactory1
class ConcreteFactory2
class ProductA1
class ProductA2
class ProductB1
class ProductB2

AbstractFactory <- Client
Client -> AbstractProductA
Client -> AbstractProductB
AbstractFactory <|.. ConcreteFactory1
AbstractFactory <|.. ConcreteFactory2

ConcreteFactory1 --> ProductA1
ConcreteFactory1 --> ProductB1

ConcreteFactory2 --> ProductA2
ConcreteFactory2 --> ProductB2

AbstractProductA <|... ProductA1
AbstractProductA <|... ProductA2
AbstractProductB <|... ProductB1
AbstractProductB <|... ProductB2

note top of Client
The Client is written against the
abstract factory and then composed at
runtime with an actual factory.
end note

note left of AbstractFactory
The AbstractFactory defines
the interface that all Concrete
factories must implement which
consists of a set of methods
for producing products.
end note

/'note left of ConcreteFactory1
The concrete factories implement the different product families.
To create a product the client uses one of these factories, 
so it never has to instantiate a product object.
end note'/

note top of AbstractProductA
This is the product family.
Each concrete factory can produce an entire set of products.
end note

@enduml
